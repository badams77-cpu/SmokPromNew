import org.gradle.api.internal.file.CopyActionProcessingStreamAction
import org.gradle.api.internal.file.copy.FileCopyDetailsInternal
import org.gradle.api.services.BuildService

import javax.annotation.Nullable
import java.time.Duration

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'

    id 'io.spring.dependency-management' version "1.1.3"
}
     apply plugin: "org.springframework.boot"
     apply plugin: 'io.spring.dependency-management'

     apply plugin: 'application'
     mainClassName = 'com.example.WebApplication'

     group 'com.smokpromotion'
     version '1.0-SNAPSHOT'
     sourceCompatibility = '17'

     repositories {
         maven {
             url "https://plugins.gradle.org/m2m2/"
         }
         maven {
             url "https://repo1.maven.org/maven2/"
         }
         flatDir {
             dirs 'libs'
         }
         mavenCentral()
     }

configurations {
    all {
//        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-core'
      //  all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        all*.exclude group: 'ch.qos.logback', module: 'logback-classic'
        all*.exclude group: 'ch.qos.logback', module: 'logback-core'
        all*.exclude group: 'com.datastax.oss'
        all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-data-cassandra'
    }
}

task resDir(){
    dependsOn(processResources)
    mkdir(new File(rootProject.buildDir, "classes/resources"))
}

task moveRes(type: Copy) {
    dependsOn(resDir)
    println "moveRes, from "+ new File(rootProject.projectDir, "/src/main/resources")
    println "moveRes, to "+ new File(rootProject.buildDir, "classes/resources")
    from( new File(rootProject.projectDir, "/src/main/resources"))
    into(new File(rootProject.buildDir, "classes/resources"))
}



task proRes(type: Copy) {
    from layout.buildDirectory.file("reports/my-report.pdf"), layout.projectDirectory.file("src/docs/manual.pdf")
    into layout.buildDirectory.dir("toArchive")
}

processResources.doLast {
//        dependsOn(proRes)
        mkdir(new File(rootProject.buildDir, "classes/resources"))
    proRes.getActions().each( a->a.execute(proRes))
}



jar {
    dependsOn processResources
    dependsOn compileJava
    dependsOn moveRes
    from(sourceSets.main.output.getDirs())

    manifest {
        attributes 'Main-Class': 'DistillerTweeter.Main'
    }
//
    archivesBaseName = 'DistillerTweeter'
    getDestinationDirectory().set(new File(projectDir, "./build/libs"))
}

     dependencies {
         testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
         testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'

         implementation('org.springframework.boot:spring-boot-starter-web')
         implementation('org.springframework.boot:spring-boot-starter-security')
         implementation('org.springframework.boot:spring-boot-starter-tomcat:3.1.3')
         implementation 'net.bytebuddy:byte-buddy:1.14.12'


         implementation fileTree("libs/MajDbOrm-1.3.0-plain.jar")
// https://mvnrepository.com/artifact/org.slf4j/slf4j-reload4j
 //   implementation 'org.slf4j:slf4j-reload4j:2.0.9'
            implementation 'org.slf4j:slf4j-api:2.0.12'
         // https://mvnrepository.com/artifact/org.slf4j/slf4j-log4j12
//         testImplementation group: 'org.slf4j', name: 'slf4j-log4j12', version: '2.1.0-alpha1', ext: 'pom'

         implementation('org.springframework.boot:spring-boot-starter-logging:3.1.12')
      implementation 'org.slf4j:slf4j-simple:2.0.12'
 //        implementation 'ch.qos.logback:logback-classic:1.4.7'
// https://mvnrepository.com/artifact/jakarta.servlet/jakarta.servlet-a
 implementation  'jakarta.servlet:jakarta.servlet-api:6.1.0'


// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-logging
         implementation 'org.springframework.boot:spring-boot-starter-logging:3.1.12'

// https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
//         implementation 'ch.qos.logback:logback-classic:1.5.8'


         // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security
         implementation("org.springframework.boot:spring-boot-starter-security:3.3.3")

//         implementation group: "ch.qos.logback", name:"logback-classic", version:"1.4.7"

         implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
         implementation('nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:2.3.0')
         implementation 'org.openjfx:javafx-base:18'
         implementation('org.springframework.boot:spring-boot-starter-validation')
         implementation('net.sourceforge.nekohtml:nekohtml')
         implementation(group: 'jakarta.servlet', name: 'jakarta.servlet-api', version: '6.0.0')
 //        implementation('org.springframework.boot:spring-boot-devtools')
         implementation('org.springframework.boot:spring-boot-starter-security')
         implementation("org.springframework.boot:spring-boot-starter-actuator")
//         implementation('org.thymeleaf.extras:thymeleaf-extras-springsecurity6')
//         implementation('org.tp,springframework.boot:spring-boot-starter-data-jpa')
// https://mvnrepository.com/artifact/com.mysql/mysql-connector-j
         implementation 'com.mysql:mysql-connector-j:8.0.33'

//         implementation group: 'com.mysql', name: 'mysql-connector-java', version: '5.1.49'
         // https://mvnrepository.com/artifact/io.projectreactor/reactor-core
         implementation 'io.projectreactor:reactor-core:3.6.4'
// https://mvnrepository.com/artifact/jakarta.persistence/jakarta.persistence-api
         implementation("org.springframework.boot:spring-boot-starter-jdbc")
         implementation group: 'jakarta.persistence', name: 'jakarta.persistence-api', version: '3.2.0'

//         implementation group: 'com.datastax.oss', name: 'cassandra-driver-core', version: '4.17.0'
//         implementation group: 'com.datastax.oss', name: 'cassandra-driver-query-builder', version: '4.17.0'
//         implementation group: 'com.datastax.oss', name: 'cassandra-driver-mapper-runtime', version: '4.17.0'

         implementation('org.springframework.session:spring-session-core')
         implementation('org.springframework.session:spring-session-data-redis') {
             exclude group: 'io.lettice', module: 'lettice-core'
         }

         // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
         implementation 'com.fasterxml.jackson.core:jackson-core:2.16.1'


//         implementation('org.apache.tomcat.embed:tomcat-embed-core:9.0.65')
         implementation('commons-fileupload:commons-fileupload:1.4')
//         implementation('redis.clients:jedis:5.1.2')
         implementation('org.thymeleaf.extras:thymeleaf-extras-springsecurity6')
         implementation group: 'com.microsoft.sqlserver', name: 'mssql-jdbc', version: '9.4.1.jre11'
         implementation('com.google.guava:guava:31.1-jre')
         implementation group: 'org.springframework.data', name: 'spring-data-cassandra', version: '4.1.3'
         // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-log4j2
     //    implementation 'org.springframework.boot:spring-boot-starter-log4j2'


         implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.16.1'
         implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.16.1'
         implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.16.1'


         implementation('com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.16.1')
         testImplementation('com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.16.1')
         implementation('net.sf.supercsv:super-csv:2.4.0')
         implementation('com.googlecode.json-simple:json-simple:1.1.1')
         implementation('org.apache.commons:commons-text:1.10.0')
         implementation('com.sun.mail:javax.mail:1.5.5')
         implementation group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.12.268'

         implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
         implementation group: 'net.lingala.zip4j', name: 'zip4j', version: '2.11.2'
         implementation group: 'org.jsoup', name: 'jsoup', version: '1.15.3'
       //  implementation group: 'com.datastax.oss', name: 'java-driver-core', version: '4.17.0'
        // implementation group: 'com.datastax.oss', name: 'java-driver-query-builder', version: '4.17.0'
        // implementation group: 'com.datastax.oss', name: 'java-driver-mapper-processor', version: '4.17.0'
        // implementation group: 'com.datastax.oss', name: 'java-driver-mapper-runtime', version: '4.17.0'

//         implementation 'org.springframework.boot:spring-boot-configuration-processor'
         implementation 'org.springframework.boot:spring-boot-starter-test'
         implementation group: 'org.mockito', name: 'mockito-core', version: '2.1.0'

         implementation 'org.javers:javers-core:5.6.3'





         implementation group: 'org.apache.commons', name: 'commons-csv', version: '1.9.0'
         implementation group: 'org.threeten', name: 'threeten-extra', version: '1.7.1'

         implementation(group: 'net.sf.jasperreports', name: 'jasperreports', version: '6.18.1')
         // removing this since seemed to get duplication error when deploying jar
         //runtimeOnly (group: 'net.sf.jasperreports', name: 'jasperreports-fonts', version: '6.16.0')
         implementation group: 'ar.com.fdvs', name: 'DynamicJasper', version: '5.3.3'
         implementation group: 'org.apache.poi', name: 'poi', version: '4.1.1'
         implementation group: 'org.apache.pdfbox', name: 'pdfbox', version: '1.8.16'
         implementation files('libs/itext-2.1.7.js9.jar')
         implementation files('libs/jasperreports-fonts-6.16.0.jar')
         implementation fileTree(dir: 'libs', include: ['*.jar'])


//         implementation group: 'org.flywaydb', name: 'flyway-core'

     }

     test {
         useJUnitPlatform()
     }


